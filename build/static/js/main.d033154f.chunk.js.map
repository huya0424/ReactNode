{"version":3,"sources":["assets/image/cnodejs.svg","assets/image/thumbs-up.svg","components/Header/Index.js","utils/api.js","utils/tab.js","components/Topics/Index.js","pages/Home/Home.js","utils/reducer.js","components/Reply/Index.js","components/ProfilePanel/Index.js","components/OtherTopic/Index.js","components/RecentReply/Index.js","pages/Topics/Index.js","pages/Profile/Index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","useState","visible","setVisible","handleOk","className","href","src","logo","alt","onClick","title","onOk","onCancel","rel","type","theme","twoToneColor","target","Axios","defaults","timeout","interceptors","request","use","config","error","Promise","reject","response","getData","data","a","get","name","url","params","res","good","color","job","ask","share","Topics","props","list","length","active","map","item","key","id","to","author","loginname","avatar_url","reply_count","visit_count","tab","moment","last_reply_at","startOf","fromNow","TabPane","Tabs","renderTabBar","DefaultTabBar","bottomOffset","style","zIndex","background","Home","page","limit","store","param","setParam","scrollMethod","useCallback","sumH","document","body","scrollHeight","documentElement","clientHeight","scrollTop","getTopics","useEffect","window","addEventListener","removeEventListener","then","useList","defaultActiveKey","onChange","TopicContext","createContext","UPDATE_TOPIC","reducer","state","action","otherTopic","TopicReducer","useReducer","dispatch","Provider","value","children","Reply","replies","index","create_at","ups","require","dangerouslySetInnerHTML","__html","content","splice","ProfilePanel","user","setUser","useContext","score","githubUsername","OtherTopic","recent_topics","temp","simple","defaultProps","RecentReply","recent_replies","topic","setTopic","match","console","log","Profile","App","exact","path","component","render","Boolean","location","hostname","locale","ReactDOM","zhCN","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d033154f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cnodejs.e2b40b75.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumbs-up.b296ff53.svg\";","import React, { useState } from 'react';\r\nimport { Modal, Icon } from 'antd';\r\nimport logo from '../../assets/image/cnodejs.svg'\r\nimport './Index.scss'\r\n\r\nfunction Header() {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n     /** 隐藏Modal(模态)框 */\r\n    const handleOk = () => {\r\n        setVisible(false)\r\n    }\r\n    /* 显示Modal(模态)框 */\r\n    const showModal = () => {\r\n        setVisible(true)\r\n    }\r\n\r\n    return(\r\n        <div className=\"header\">\r\n            <div>\r\n                <a href=\"/\">\r\n                    <img src={logo} alt=\"logo\" />\r\n                </a>\r\n                <a href=\"javscript:void(0);\" className=\"about\" onClick={showModal}>关于</a>\r\n            </div>\r\n            <Modal title=\"关于本项目\" visible={visible} onOk={handleOk} onCancel={handleOk} >\r\n                {/* P.S. 当使用_blank时有一个容易忽略的安全漏洞，需要注意：https://developers.google.com/web/tools/lighthouse/audits/noopener?hl=zh-cn */}\r\n                <p>\r\n                    作者：\r\n                    <a href=\"javscript:void(0);\" rel=\"nofollow noopener noreferrer\" >\r\n                        胡大头\r\n                    </a>\r\n                </p>\r\n                <p>\r\n                    源码：\r\n                    <Icon type=\"star\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                    <a href=\"https://github.com/huya123/ReactNode\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" >\r\n                        ReactCnodeJS\r\n                    </a>\r\n                    <Icon type=\"star\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                    &nbsp;欢迎Star~&nbsp;\r\n                    <Icon type=\"star\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                </p>\r\n                <div>\r\n                    <p>技术栈：</p>\r\n                    <ul>\r\n                        <li>React</li>\r\n                        <li>React Hooks</li>\r\n                        <li>React Router</li>\r\n                        <li>Ant Design</li>\r\n                        <li>Axios</li>\r\n                    </ul>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Header","import Axios from \"axios\"\r\n\r\n// import request from './request'\r\n\r\nconst url = name => `https://cnodejs.org/api/v1/${name}`;\r\n\r\n// 请求超时\r\nAxios.defaults.timeout = 10000;\r\n\r\n//请求拦截\r\nAxios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n//响应拦截\r\nAxios.interceptors.response.use(\r\n    response => {\r\n        return response;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport const getData = async (data) => {\r\n    const res = await Axios.get(url(data.url), { params:data.params });\r\n    return res.data;\r\n}","export default {\r\n    good: {\r\n        name: '精华',\r\n        color: 'magenta'\r\n    },\r\n    job: {\r\n        name: '招聘',\r\n        color: 'blue'\r\n    },\r\n    ask: {\r\n        name: '问答',\r\n        color: 'geekblue'\r\n    },\r\n    share: {\r\n        name: '分享',\r\n        color: 'green'\r\n    }\r\n  }","import React from 'react';\r\nimport { Skeleton, Tag } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport  tab  from '../../utils/tab'\r\nimport './Index.scss'\r\n\r\nfunction Topics(props) {\r\n    const { list } = props.list;\r\n\r\n    if(list.length === 0) {\r\n        return (<Skeleton active />)\r\n    } \r\n\r\n    const item = list.map((item) => {\r\n        return (\r\n            <div className=\"topics\" key={item.id}>\r\n                <Link to={'/user/' + item.author.loginname}>\r\n                    <img src={item.author.avatar_url} alt=\"用户头像\" />\r\n                </Link>\r\n                <span className=\"count\">\r\n                    <em>{item.reply_count}</em>/<em>{item.visit_count}</em>\r\n                </span>\r\n                <Tag color={tab[item.tab] && tab[item.tab].color}>\r\n                    {tab[item.tab] && tab[item.tab].name}\r\n                </Tag>\r\n                <Link className=\"title\" to={'/topics/' + item.id}>\r\n                    {item.title}\r\n                </Link>\r\n                <span className=\"time\">\r\n                    {moment(item.last_reply_at, 'YYYY-MM-DD').startOf('day').fromNow()}\r\n                </span>\r\n            </div>\r\n            \r\n        )\r\n    })\r\n    return item;\r\n}\r\n\r\nexport default Topics","import React, { useState, useEffect, useCallback } from 'react'\r\nimport 'antd/dist/antd.css'\r\nimport { Tabs } from 'antd'\r\nimport { StickyContainer, Sticky } from 'react-sticky'\r\nimport './Index.scss'\r\nimport { getData } from '../../utils/api'\r\nimport Topics from '../../components/Topics/Index'\r\n\r\nconst { TabPane } = Tabs;\r\nconst renderTabBar = (props, DefaultTabBar) => (\r\n    <Sticky bottomOffset={80}>\r\n        {\r\n            ({ style }) => (\r\n                <DefaultTabBar {...props} style={{ ...style, zIndex: 1, background: '#fff' }} />\r\n            )\r\n        }\r\n    </Sticky>\r\n);\r\n\r\nfunction useList() {\r\n    let [param, setParam] = useState({\r\n        page: 1,\r\n        limit: 20,\r\n        list: [],\r\n        store: {},\r\n        tab: 'all'\r\n    });\r\n\r\n    const scrollMethod = useCallback(()=>{\r\n        const sumH = document.body.scrollHeight || document.documentElement.scrollHeight;\r\n        const viewH = document.documentElement.clientHeight;\r\n        const scrollH = document.body.scrollTop || document.documentElement.scrollTop;\r\n        if (viewH + scrollH >= sumH) {\r\n            getTopics();\r\n        }\r\n    },[param.list]);\r\n\r\n    useEffect(()=>{\r\n        getTopics();\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener('scroll', scrollMethod);\r\n\r\n        return ()=>{\r\n            window.removeEventListener('scroll', scrollMethod);\r\n        }\r\n    }, [param.list]);\r\n\r\n    const getTopics = () => {\r\n        let params = {\r\n            page: param.page,\r\n            limit: param.limit,\r\n            tab: param.tab\r\n        };\r\n        getData({url:'topics', params}).then(res => {\r\n            const store = param.store;\r\n            setParam((param)=>{\r\n                return {\r\n                    ...param,\r\n                    limit: param.limit + 10,\r\n                    list: res.data,\r\n                };\r\n            });\r\n            // 将数据存储到对应的key下\r\n            store[param.tab] = {\r\n                limit: param.limit,\r\n                list: res.data\r\n            };\r\n        });\r\n    }\r\n\r\n    return {param, setParam, getTopics};\r\n}\r\n\r\n\r\nfunction Home() {\r\n    let { param, setParam, getTopics } = useList();\r\n\r\n    const changedTab = (tab) => {\r\n        const store = param.store;\r\n\r\n        if(!param.store[tab]) {\r\n            param.limit = 20;\r\n            param.list = [];\r\n            param.tab = tab;\r\n            getTopics();\r\n            return;\r\n        }\r\n        setParam((param)=>{\r\n            return {\r\n                ...param,\r\n                tab,\r\n                limit: store[tab].limit + 10,\r\n                list: store[tab].list\r\n            }\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"home\">\r\n                <StickyContainer>\r\n                    <Tabs defaultActiveKey=\"all\" renderTabBar={renderTabBar} onChange={changedTab}  >\r\n                        <TabPane tab=\"全部\" key=\"all\">\r\n                            <Topics list={param} />\r\n                        </TabPane>\r\n                        <TabPane tab=\"精华\" key=\"good\">\r\n                            <Topics list={param} />\r\n                        </TabPane>\r\n                        <TabPane tab=\"分享\" key=\"share\">\r\n                            <Topics list={param} />\r\n                        </TabPane>\r\n                        <TabPane tab=\"问答\" key=\"ask\">\r\n                            <Topics list={param} />\r\n                        </TabPane>\r\n                        <TabPane tab=\"工作\" key=\"job\">\r\n                            <Topics list={param} />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </StickyContainer>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Home","import React, { createContext, useReducer } from 'react';\r\n\r\nexport const TopicContext = createContext({});\r\nexport const UPDATE_TOPIC = 'UPDATE_TOPIC';\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case UPDATE_TOPIC:\r\n             return action.otherTopic;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const TopicReducer=props=>{\r\n    const [otherTopic, dispatch] = useReducer(reducer, <div />)\r\n    return(\r\n        <TopicContext.Provider value={{otherTopic, dispatch}}>\r\n            {props.children}\r\n        </TopicContext.Provider>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport './Index.scss'\r\n\r\nfunction Reply(props) {\r\n    const getThumbs = (length) =>{\r\n        if(!length) {\r\n            return <span />\r\n        }\r\n        return (\r\n            <span className=\"thumbs\">\r\n                <img src={require('../../assets/image/thumbs-up.svg')} alt=\"点赞\" />\r\n                {length}\r\n            </span>\r\n        )\r\n    }\r\n\r\n    const { replies } = props;\r\n    const data = replies.map((item, index) => {\r\n        return(\r\n            <div key={item.id}>\r\n                <Link to={\"/user/\" + item.author.loginname}>\r\n                    <img src={item.author && item.author.avatar_url} alt=\"头像\" />\r\n                </Link>\r\n                <div>\r\n                    <div className=\"info\">\r\n                        <p>\r\n                            <span>{index+1}楼&nbsp;</span>\r\n                            <Link to={\"/user/\" + item.author.loginname}>\r\n                                {item.author.loginname} &nbsp;\r\n                            </Link>\r\n                            <span>\r\n                                {moment(item.create_at, 'YYYY-MM-DD').startOf('day').fromNow()}\r\n                            </span>\r\n                        </p>\r\n                        { getThumbs(item.ups.length) }\r\n                    </div>\r\n                    <p dangerouslySetInnerHTML={{__html:item.content}}></p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    });\r\n\r\n    data.splice(0, 0, <div key={1}> <span>{replies.length}</span>&nbsp; 回复 </div>);\r\n    \r\n    return <div className=\"reply\">{data}</div>\r\n}\r\nexport default Reply","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { getData } from '../../utils/api';\r\nimport moment from 'moment'\r\nimport { Skeleton } from 'antd'\r\nimport { TopicContext, UPDATE_TOPIC } from '../../utils/reducer'\r\nimport './Index.scss'\r\n\r\nfunction ProfilePanel(props) {\r\n\r\n    let [user, setUser] = useState({});\r\n    const { loginname } = props;\r\n    const { dispatch } = useContext(TopicContext);\r\n\r\n    useEffect(()=>{\r\n        getData({url: `user/${loginname}`}).then(res=>{\r\n            setUser(res.data);\r\n            dispatch({type:UPDATE_TOPIC, otherTopic: res.data})\r\n        })\r\n    },[]);\r\n\r\n    if(!user.loginname) {\r\n        return <Skeleton active />\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile-panel\">\r\n            <Link className=\"user\" to={'/user/' + user.loginname}>\r\n                <img src={user.avatar_url} alt=\"头像\" />\r\n                {user.loginname}\r\n            </Link>\r\n            <p> 积分：{user.score} </p>\r\n            <p>\r\n                Github：\r\n                <a href={'https://github.com/' + user.githubUsername} target=\"_blank\" rel=\"nofollow noopener noreferrer\" >\r\n                    {user.githubUsername}\r\n                </a>\r\n            </p>\r\n            <p>\r\n                注册时间：{moment(user.create_at, 'YYYY-MM-DD').startOf('day').fromNow()}\r\n            </p>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePanel;","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { TopicContext } from '../../utils/reducer'\r\nimport { Divider } from 'antd'\r\nimport moment from 'moment'\r\nimport './Index.scss'\r\n\r\nfunction OtherTopic(props) {\r\n    const { otherTopic } = useContext(TopicContext);\r\n    \r\n    if(!otherTopic.loginname) {\r\n        return <div />\r\n    }\r\n    const data = otherTopic.recent_topics.map((item, index)=>{\r\n        let temp = <div key={item.id}><Link key={item.id} to={'/topics/' + item.id}> {item.title} </Link></div>;\r\n        if(!props.simple) {\r\n            temp = (\r\n                <div key={item.id}>\r\n                    <Link to={\"/user/\" + item.author.loginname}>\r\n                        <img src={item.author.avatar_url} alt=\"头像\" />\r\n                    </Link>\r\n                    <Link to={\"/topics/\" + item.id}> {item.title} </Link>\r\n                    <span className=\"time\">\r\n                        {moment(item.last_reply_at, 'YYYY-MM-DD').startOf('day').fromNow()}\r\n                    </span>\r\n                    <Divider className=\"inside-divider\" />\r\n                </div>\r\n            )\r\n        }\r\n        return temp\r\n    })\r\n    return (\r\n        <div className=\"other-panel\">\r\n            <header>最近创建的话题</header>\r\n            <Divider className=\"divider\" />\r\n            {data}\r\n        </div>\r\n    )\r\n\r\n}\r\n// 设置默认值\r\nOtherTopic.defaultProps = {\r\n    simple: true\r\n}\r\n\r\nexport default OtherTopic","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { TopicContext } from '../../utils/reducer'\r\nimport { Divider } from 'antd'\r\nimport moment from 'moment'\r\nimport \"./Index.scss\"\r\n\r\nfunction RecentReply(props) {\r\n\r\n    const { otherTopic } = useContext(TopicContext);\r\n\r\n    if(!otherTopic.loginname) {\r\n        return <div />\r\n    }\r\n    const data = otherTopic.recent_replies.map((item, index) => {\r\n        let temp = <div key={item.id}><Link key={item.id} to={\"/topics/\" + item.id}>{item.title}</Link></div>\r\n        \r\n        if(!props.simple) {\r\n            temp = (\r\n                <div key={item.id}>\r\n                    <Link to={\"/user/\" + item.author.loginname}>\r\n                        <img src={item.author.avatar_url} alt=\"头像\" />\r\n                    </Link>\r\n                    <Link to={\"/topics/\" + item.id}>\r\n                        {item.title}\r\n                    </Link>\r\n                    <span className=\"time\">\r\n                        {moment(item.last_reply_at, 'YYYY-MM-DD').startOf('day').fromNow()}\r\n                    </span>\r\n                    <Divider className=\"inside-divider\" />\r\n                </div>\r\n            )\r\n        }\r\n        return temp\r\n    })\r\n\r\n    return (\r\n        <div className=\"recent-reply\">\r\n            <header>最近参与的话题</header>\r\n            <Divider className=\"divider\" />\r\n            {data}\r\n        </div>\r\n    )\r\n}\r\n\r\n// 设置默认值\r\nRecentReply.defaultProps = {\r\n    simple: true\r\n}\r\n\r\nexport default RecentReply;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { getData } from '../../utils/api';\r\nimport  tab  from '../../utils/tab'\r\nimport { Divider, Skeleton } from 'antd'\r\nimport { TopicReducer } from '../../utils/reducer'\r\nimport Reply from '../../components/Reply/Index';\r\nimport ProfilePanel from '../../components/ProfilePanel/Index';\r\nimport OtherTopic from '../../components/OtherTopic/Index';\r\nimport RecentReply from '../../components/RecentReply/Index';\r\nimport './Index.scss';\r\nimport '../../assets/vue.css'\r\n\r\nfunction Topics(props) {\r\n    const [topic, setTopic] = useState({});\r\n    const id = props.match.params.id;\r\n\r\n    useEffect(()=>{\r\n        getData({url: `topic/${id}`}).then(res=>{\r\n            setTopic(res.data);\r\n        });\r\n\r\n        return ()=>{\r\n            console.log('离开');\r\n        }\r\n    }, [id]); //id发生变化时重新调用，比如点击最近参与话题、最近创建话题\r\n\r\n    if(!topic.id) {\r\n        return (\r\n            <Skeleton active />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"topic\">\r\n            <div className=\"left\">\r\n                <div className=\"title\" dangerouslySetInnerHTML={{__html:topic.title}}></div>\r\n                <div className=\"info\">\r\n                    <span>\r\n                        发布于&nbsp;\r\n                        {moment(topic.create_at, 'YYYY-MM-DD').startOf('day').fromNow()}\r\n                        &nbsp;•&nbsp;\r\n                    </span>\r\n                    作者：\r\n                    <Link to={'/user/' + topic.author.loginname}>\r\n                        {topic.author.loginname}\r\n                    </Link>\r\n                    &nbsp;•&nbsp;\r\n                    <span>{topic.visit_count}次浏览</span>\r\n                    &nbsp;•&nbsp;\r\n                    <span>来自：{tab[topic.tab] && tab[topic.tab].name}</span>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"content\" dangerouslySetInnerHTML={{__html:topic.content}}></div>\r\n                <Reply replies={topic.replies} />\r\n            </div>\r\n            <div className=\"right\">\r\n                <TopicReducer>\r\n                    <ProfilePanel loginname={topic.author.loginname} />\r\n                    <OtherTopic />\r\n                    <RecentReply />\r\n                </TopicReducer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topics","import React, { useEffect, useState } from 'react';\r\nimport { getData } from '../../utils/api';\r\nimport { TopicReducer } from '../../utils/reducer'\r\nimport ProfilePanel from '../../components/ProfilePanel/Index'\r\nimport OtherTopic from '../../components/OtherTopic/Index'\r\nimport RecentReply from '../../components/RecentReply/Index'\r\nimport { Skeleton }  from 'antd'\r\nimport './Index.scss'\r\n\r\nfunction Profile(props) {\r\n    const [user, setUser] = useState({});\r\n    const id = props.match.params.id;\r\n    console.log(\"user-id=\" + id);\r\n    useEffect(()=>{\r\n        getData({url:`user/${id}`}).then(res=>{\r\n            console.log(res);\r\n            setUser(res.data);\r\n        })\r\n        return ()=>{\r\n            console.log('离开');\r\n        }\r\n    },[id]);\r\n\r\n    if(!user.loginname) {\r\n        return <Skeleton active />\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <TopicReducer>\r\n                <ProfilePanel loginname={user.loginname} />\r\n                <OtherTopic simple={false} />\r\n                <RecentReply simple={false} />\r\n            </TopicReducer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport { HashRouter  as Router, Route, Redirect } from 'react-router-dom'\r\nimport Header from './components/Header/Index'\r\nimport './App.css'\r\nimport Home from './pages/Home/Home'\r\nimport Topics from './pages/Topics/Index'\r\nimport Profile from './pages/Profile/Index'\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            \r\n            <Router>\r\n                <div className=\"box\">\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route path=\"/topics/:id\" component={Topics} />\r\n                    <Route path=\"/user/:id\" component={Profile} />\r\n                    <Route exact path=\"/topics\" render={() => <Redirect to=\"/\" />} />\r\n                    <Route exact path=\"/user\" render={() => <Redirect to=\"/\" />} />\r\n                </div>\r\n            </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { Provider } from 'react-redux'\r\n// import store from './store'\r\nimport App from './App';\r\nimport './index.css'\r\nimport { ConfigProvider } from 'antd';\r\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nmoment.locale('zh-cn')\r\nReactDOM.render(\r\n    <ConfigProvider locale={zhCN}>\r\n        <App />\r\n    </ConfigProvider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}